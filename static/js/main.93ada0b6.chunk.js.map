{"version":3,"sources":["components/item.jsx","components/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Item","props","style","width","type","margin","height","backgroundColor","borderRadius","textAlign","targetKey","className","dragData","PoNum","num","kill","container","Container","useState","items","state","setState","slice","index","indexOf","splice","onHit","e","length","push","minHeight","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93ada0b6.chunk.js","sourcesContent":["import { DragDropContainer, DropTarget } from 'react-drag-drop-container';\r\n\r\nexport default function Item(props) {\r\n    var style = {\r\n        width: (props.type == 'square' ? '50px': '100px'),\r\n        margin: '5px',\r\n        height: (props.type == 'square' ? '50px': '30px'),\r\n        backgroundColor: (props.type == 'square' ? '#a4addb': '#e4e7f7'),\r\n        borderRadius: '5px',\r\n        textAlign: 'center'\r\n    };\r\n    return (\r\n        <DragDropContainer targetKey=\"container\" className=\"row\" dragData={{PoNum: props.num, kill: props.kill, container: props.container}}\r\n         >\r\n            <div style={style}>\r\n                {props.num}\r\n            </div>\r\n        </DragDropContainer>\r\n    );\r\n}","import { DropTarget } from 'react-drag-drop-container';\r\nimport { useState } from 'react';\r\nimport Item from './item';\r\n\r\nexport default function Container(props) {\r\n    var [state, setState] = useState({ items: [] });\r\n\r\n    const HandleHit = (e) => {\r\n        // Add Item to the DropTarget's state\r\n        let items = state.items.slice(); \r\n        if (items.length < 10)  {    \r\n            items.push(e.dragData.PoNum);\r\n            setState({ items: items });\r\n            e.dragData.kill(e.dragData.PoNum, e.dragData.container == \"container\"+props.num);\r\n        }\r\n    }\r\n    const kill = (PoNum, container) => {\r\n        // Delete Item from the previous DropTarget's state\r\n        let items = state.items.slice();\r\n        const index = items.indexOf(PoNum);\r\n        if (index > -1  && !container) {\r\n            items.splice(index, 1);\r\n        }\r\n        setState({items: items});\r\n    };\r\n\r\n    return (\r\n        <DropTarget \r\n            targetKey=\"container\"\r\n            onHit={HandleHit} >\r\n                <div style={{\r\n                    backgroundColor: '#f5f5f5',\r\n                    borderRadius: '5px',\r\n                    textAlign: 'center',\r\n                    margin: '0.5rem',\r\n                    minHeight: '20vh'\r\n                }} className=\"container h-auto\">\r\n                    {state.items.map((item, index) => {\r\n                        return (\r\n                            <Item key={index} type=\"square\" container={\"container\"+props.num} num={item} kill={kill}>\r\n                                {item}\r\n                            </Item>\r\n                        )\r\n                  })}\r\n                </div>\r\n        </DropTarget>\r\n    );\r\n}","import { useState } from 'react';\r\nimport './App.css';\r\nimport Item from './components/item';\r\nimport Container from './components/Container';\r\nimport { DropTarget } from 'react-drag-drop-container';\r\n\r\n\r\nfunction App() {\r\n\r\n  var [state, setState] = useState({ \r\n    items: ['#123455', '#123455', '#123455', '#123455', '#123455', '#123455', '#123455','#123455','#123455','#123455','#123455'] \r\n  });\r\n  \r\n  const HandleHit = (e) => {\r\n      // Add Item to the DropTarget's state\r\n      let items = state.items.slice();   \r\n      items.push(e.dragData.PoNum);\r\n      setState({ items: items });\r\n      e.dragData.kill(e.dragData.PoNum, e.dragData.container == \"leftContainer\");\r\n  }\r\n\r\n  const kill = (PoNum,container) => {\r\n    // Delete Item from the previous DropTarget's state\r\n    let items = state.items.slice();\r\n    const index = items.indexOf(PoNum);\r\n    if (index > -1 && !container) {\r\n      items.splice(index, 1);\r\n    }\r\n    setState({items: items});\r\n  };\r\n    \r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center my-4\">\r\n      <div className=\"card border-gray shadow rounded-2\" style={{ width: '80vw', minHeight: '90vh'}}>\r\n        <div className=\"card-body\">\r\n          <div className=\"row h-100 justify-content-around\">\r\n            <div className=\"col-12 col-md-3 text-center\">\r\n              <h5>PO Number</h5>\r\n                <DropTarget targetKey=\"container\" onHit={HandleHit} >\r\n                  <div style={{minHeight: '5vh'}}>\r\n                    {state.items.map((item, index) => {\r\n                      return (\r\n                        <Item key={index} type=\"rectangle\" num={item} kill={kill} container=\"leftContainer\">\r\n                          {item}\r\n                        </Item>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </DropTarget>\r\n            </div>\r\n            <div className=\"col-12 col-md-8 text-center\">\r\n              <h5>Containers</h5>\r\n                <Container num=\"1\"/>\r\n                <Container num=\"2\"/>\r\n                <Container num=\"3\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer d-flex justify-content-end\">\r\n          <button className=\"btn btn-primary\">Proceed</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';  \nimport $ from 'jquery';  \nimport Popper from 'popper.js';  \nimport 'bootstrap/dist/js/bootstrap.bundle.min';  \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}